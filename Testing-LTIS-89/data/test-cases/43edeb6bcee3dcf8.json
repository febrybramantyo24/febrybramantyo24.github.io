{"uid":"43edeb6bcee3dcf8","name":"[TC-3] Testing dengan lender baru Individual","fullName":"Testcase.LTIS-89#test_login_user_lender_new_users_1","historyId":"1f0d6dea41faf6cfbd8cb2345da00edb","time":{"start":1687600944168,"stop":1687600974195,"duration":30027},"description":"\n    1. Melakukan login dengan user existing.\n    2. Cek Menu Profile Agreement -> Subscription Agreement\n    3. Cek Menu Profile Agreement -> Lender - Borrower Agreement\n    4. Cek Menu Profile Agreement -> Old Agreement\n\n    *** Kodisi saat ini ***\n    login dengan akun baru Individual.\n\n    *** Skenario Result ***\n    1. Passed, Memberikan deskripsi [Agreement Element Not Found] di test steps [Lender - Old Agreement].\n    2. Memberikan screenshot pages [Agreement Element Not Found].\n    3. Memberikan lampiran database [inhouse-agreement],[funderportal] dan [profile_db]\n\n    *** catatan ***\n    user baru belum memiliki old agreement, sehingga mendapatkan deskripsi [Agreement Element Not Found].\n    dan dilengkapi lampiran database agreement di FP (old_agreement)\n\n    Langkah-langkah ini meliputi ...\n","descriptionHtml":"<pre><code>1. Melakukan login dengan user existing.\n2. Cek Menu Profile Agreement -&gt; Subscription Agreement\n3. Cek Menu Profile Agreement -&gt; Lender - Borrower Agreement\n4. Cek Menu Profile Agreement -&gt; Old Agreement\n\n*** Kodisi saat ini ***\nlogin dengan akun baru Individual.\n\n*** Skenario Result ***\n1. Passed, Memberikan deskripsi [Agreement Element Not Found] di test steps [Lender - Old Agreement].\n2. Memberikan screenshot pages [Agreement Element Not Found].\n3. Memberikan lampiran database [inhouse-agreement],[funderportal] dan [profile_db]\n\n*** catatan ***\nuser baru belum memiliki old agreement, sehingga mendapatkan deskripsi [Agreement Element Not Found].\ndan dilengkapi lampiran database agreement di FP (old_agreement)\n\nLangkah-langkah ini meliputi ...\n</code></pre>\n","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"@allure.title(\"[TC-3] Testing dengan lender baru Individual\")\n    @allure.description(\"\"\"\n        1. Melakukan login dengan user existing.\n        2. Cek Menu Profile Agreement -> Subscription Agreement\n        3. Cek Menu Profile Agreement -> Lender - Borrower Agreement\n        4. Cek Menu Profile Agreement -> Old Agreement\n    \n        *** Kodisi saat ini ***\n        login dengan akun baru Individual.\n    \n        *** Skenario Result ***\n        1. Passed, Memberikan deskripsi [Agreement Element Not Found] di test steps [Lender - Old Agreement].\n        2. Memberikan screenshot pages [Agreement Element Not Found].\n        3. Memberikan lampiran database [inhouse-agreement],[funderportal] dan [profile_db]\n    \n        *** catatan ***\n        user baru belum memiliki old agreement, sehingga mendapatkan deskripsi [Agreement Element Not Found].\n        dan dilengkapi lampiran database agreement di FP (old_agreement)\n    \n        Langkah-langkah ini meliputi ...\n    \"\"\")\n    @allure.label('positif')\n    def test_login_user_lender_new_users_1():\n        email = \"testing.akunfadhli01+nolan@gmail.com\"\n        password = \"Testing1\"\n    \n        with allure.step(f\"Test Steps\"):\n>           browser = sign_agreement(email, password)\n\nTestcase\\LTIS-89.py:1171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTestcase\\LTIS-89.py:795: in sign_agreement\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nemail = 'testing.akunfadhli01+nolan@gmail.com', password = 'Testing1'\n\n    @allure.title(\"Skenario positif Sign Agreement\")\n    def sign_agreement(email, password):\n        start_time = time.time()\n        browser = None\n        try:\n            with allure.step(f\"Login User {email}\"):\n                service = Service(ChromeDriverManager().install())\n                browser = webdriver.Chrome(service=service)\n                # # browser = webdriver.Chrome(ChromeDriverManager().install())\n                browser.get(\"https://app.mekar-test.xyz/\")\n                browser.maximize_window()\n                time.sleep(1)\n    \n                with allure.step(\"Mengisi Email\"):\n                    email_input = browser.find_element(By.XPATH, \"//input[@id='login_email']\")\n                    slow_typing(email_input, email)\n    \n                    email_input = browser.find_element(By.XPATH, \"//input[@id='login_email']\")\n                    email = email_input.get_attribute('value') #mengambil value email\n    \n                with allure.step(\"Mengisi Password\"):\n                    password_input = browser.find_element(By.XPATH, \"//input[@id='login_password']\")\n                    slow_typing(password_input, password)\n                    allure.attach(browser.get_screenshot_as_png(), name=\"Fill in Password\")\n    \n                with allure.step(\"Klik Tombol Login\"):\n                    login_button = browser.find_element(By.XPATH, \"//body/div[@id='root']/div[1]/div[2]/div[1]/form[1]/div[5]/div[1]/div[1]/div[1]/button[1]\")\n                    login_button.click()\n                    time.sleep(2)\n    \n                    wait = WebDriverWait(browser, 20)\n                    try:\n                        wait.until(EC.invisibility_of_element_located((By.XPATH, \"//body/div[@id='root']/div[1]/div[2]/div[1]/form[1]/div[5]/div[1]/div[1]/div[1]/button[1]\")))\n                    except TimeoutException:\n                        allure.attach(browser.get_screenshot_as_png(), name=\"Login Button Not Disappeared\")\n                        raise TimeoutException(\"Login button did not disappear\")\n    \n                try:\n                    popup = browser.find_element(By.CLASS_NAME, \"modal.multi-step.custom-modal.use-of-information\")\n                    if popup.is_displayed():\n                        with allure.step(\"Klik Tombol popup Agree\"):\n                            allure.attach(browser.get_screenshot_as_png(), name=\"menu popup\")\n                            time.sleep(1)\n                            agree_button = popup.find_element(By.XPATH, \"//button[contains(text(),'Agree')]\")\n                            agree_button.click()\n                            time.sleep(3)\n                except NoSuchElementException:\n                    pass\n    \n            # with allure.step(\"Klik Tombol Popup Tanda Tangan Perjanjian \"):\n            #     allure.attach(browser.get_screenshot_as_png(), name=\"Dashboard popup agreement\")\n            #     button_sign_agreement = browser.find_element(By.XPATH, \"//button[contains(text(),'Sign the Agreement')]\")\n            #     button_sign_agreement.click()\n            #     time.sleep(3)\n    \n                # with allure.step(\"Klik Checkbox Perjanjian\"):\n                #     checkbox_1 = browser.find_element(By.XPATH, '//*[@id=\"checkboxId\"]')\n                #     checkbox_1.click()\n                #     assert checkbox_1.is_selected()\n                #     allure.attach(browser.get_screenshot_as_png(), name=\"Sign Agreement\")\n    \n    \n                # with allure.step(\"Klik Tombol Close Tanda Tangan Perjanjian\"):\n                #     wait = WebDriverWait(browser, 20)\n                #     try:\n                #         button_sign = wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"myModalSigning\"]/div/div/div/div[2]/div/div/div/button')))\n                #         button_sign.click()\n    \n    \n                #     except TimeoutException:\n                #         allure.attach(browser.get_screenshot_as_png(), name=\"Button Sign tidak dapat memberikan response\")\n                #         raise TimeoutException(\"Button Sign tidak dapat memberikan response\")\n    \n    \n                #     wait = WebDriverWait(browser, 23)\n                #     wait.until(EC.invisibility_of_element_located((By.XPATH, '//*[@id=\"myModalSigning\"]/div/div/div/div[2]/div/div/div/button')))\n                #     allure.attach(browser.get_screenshot_as_png(), name=\"Thanks You Page\")\n                #     time.sleep(1)\n    \n                #     click_close_agreement = browser.find_element(By.XPATH, '//*[@id=\"myModalSigned\"]/div/div/div/button')\n                #     click_close_agreement.click()\n    \n    \n    #click profile agreement\n            with allure.step(\"Lender - NEW Mekar Agreement\"):\n                button_profile = browser.find_element(By.XPATH, '//*[@id=\"headerWrapper\"]/nav/div/ul/li[2]/a')\n                button_profile.click()\n                allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot menu profile Agreement\")\n                time.sleep(1)\n    \n    #expect pass jika element tidak ditemukan\n    \n                menu_agreement = browser.find_element(By.XPATH, '//a[contains(@href, \"/individual-agreement/\") and contains(@class, \"dropdown-item\") and contains(.//span/@class, \"zmdi-file-text\")]')\n                menu_agreement.click()\n                time.sleep(3)\n                allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot Dashboard Agreement\")\n    \n                time.sleep(1)\n    #-\n    \n                with allure.step(\"Subscription Agreement\"):\n                    try:\n                        button_click_agreement = browser.find_element(By.XPATH, '//*[@id=\"funderAgree\"]/div/table/tbody/tr/td[1]/a')\n                        button_click_agreement.click()\n    \n            # Tunggu hingga tombol menghilang\n                        wait = WebDriverWait(browser, 20)\n                        wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"funderAgree\"]/div/table/tbody/tr/td[1]/a')))\n                        allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot Dashboard Subscription Agreement\")\n                        time.sleep(1)\n    \n            #switch tab 2\n                        browser.switch_to.window(browser.window_handles[1])\n                        time.sleep(2)\n    \n            #--Ambil value url dari browser tab 2\n                        current_url = browser.current_url\n                        print(current_url)\n    \n    \n            #--Request downlaod link agreement\n                        dl_agreement = current_url\n    \n                        response = requests.get(dl_agreement)\n                        if response.status_code == 200:\n                        # Melampirkan file PDF ke dalam laporan Allure\n                            with allure.step(f\"Download Document Agreement\"):\n                                allure.attach(response.content, name=\"Download Agreement pdf\", attachment_type=allure.attachment_type.PDF)\n                                print(\"File berhasil dilampirkan.\")\n                                allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot Document Agreement\")\n                                allure.attach(current_url, name=\"Path Url Agreement\")\n                        else:\n                            print(\"Gagal mengunduh file.\")\n                            allure.attach(\" tidak menemukan document agreement di [bucket-renovation-test] \", name=\"Download Agreement Error\")\n                            allure.attach(browser.get_screenshot_as_png(), name=\"Screenshoot Agreement Error\")\n                            allure.attach(current_url, name=\"Failed Url\")\n                        time.sleep(1)\n    \n                    except NoSuchElementException:\n                        with allure.step(\"Subscription Agreement\"):\n                            allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot Agreement Element Not Found\")\n                            allure.attach(\"Agreement element was not found.\", name=\"Agreement Element Not Found\")\n                        pass\n    \n    #close tab 2 browser dan beralih ke tab 1\n>                   browser.switch_to.window(browser.window_handles[1])\nE                   IndexError: list index out of range\n\nTestcase\\LTIS-89.py:204: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1687600944071,"stop":1687600944167,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"\n    1. Melakukan login dengan user existing.\n    2. Cek Menu Profile Agreement -> Subscription Agreement\n    3. Cek Menu Profile Agreement -> Lender - Borrower Agreement\n    4. Cek Menu Profile Agreement -> Old Agreement\n\n    *** Kodisi saat ini ***\n    login dengan akun baru Individual.\n\n    *** Skenario Result ***\n    1. Passed, Memberikan deskripsi [Agreement Element Not Found] di test steps [Lender - Old Agreement].\n    2. Memberikan screenshot pages [Agreement Element Not Found].\n    3. Memberikan lampiran database [inhouse-agreement],[funderportal] dan [profile_db]\n\n    *** catatan ***\n    user baru belum memiliki old agreement, sehingga mendapatkan deskripsi [Agreement Element Not Found].\n    dan dilengkapi lampiran database agreement di FP (old_agreement)\n\n    Langkah-langkah ini meliputi ...\n","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"@allure.title(\"[TC-3] Testing dengan lender baru Individual\")\n    @allure.description(\"\"\"\n        1. Melakukan login dengan user existing.\n        2. Cek Menu Profile Agreement -> Subscription Agreement\n        3. Cek Menu Profile Agreement -> Lender - Borrower Agreement\n        4. Cek Menu Profile Agreement -> Old Agreement\n    \n        *** Kodisi saat ini ***\n        login dengan akun baru Individual.\n    \n        *** Skenario Result ***\n        1. Passed, Memberikan deskripsi [Agreement Element Not Found] di test steps [Lender - Old Agreement].\n        2. Memberikan screenshot pages [Agreement Element Not Found].\n        3. Memberikan lampiran database [inhouse-agreement],[funderportal] dan [profile_db]\n    \n        *** catatan ***\n        user baru belum memiliki old agreement, sehingga mendapatkan deskripsi [Agreement Element Not Found].\n        dan dilengkapi lampiran database agreement di FP (old_agreement)\n    \n        Langkah-langkah ini meliputi ...\n    \"\"\")\n    @allure.label('positif')\n    def test_login_user_lender_new_users_1():\n        email = \"testing.akunfadhli01+nolan@gmail.com\"\n        password = \"Testing1\"\n    \n        with allure.step(f\"Test Steps\"):\n>           browser = sign_agreement(email, password)\n\nTestcase\\LTIS-89.py:1171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTestcase\\LTIS-89.py:795: in sign_agreement\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nemail = 'testing.akunfadhli01+nolan@gmail.com', password = 'Testing1'\n\n    @allure.title(\"Skenario positif Sign Agreement\")\n    def sign_agreement(email, password):\n        start_time = time.time()\n        browser = None\n        try:\n            with allure.step(f\"Login User {email}\"):\n                service = Service(ChromeDriverManager().install())\n                browser = webdriver.Chrome(service=service)\n                # # browser = webdriver.Chrome(ChromeDriverManager().install())\n                browser.get(\"https://app.mekar-test.xyz/\")\n                browser.maximize_window()\n                time.sleep(1)\n    \n                with allure.step(\"Mengisi Email\"):\n                    email_input = browser.find_element(By.XPATH, \"//input[@id='login_email']\")\n                    slow_typing(email_input, email)\n    \n                    email_input = browser.find_element(By.XPATH, \"//input[@id='login_email']\")\n                    email = email_input.get_attribute('value') #mengambil value email\n    \n                with allure.step(\"Mengisi Password\"):\n                    password_input = browser.find_element(By.XPATH, \"//input[@id='login_password']\")\n                    slow_typing(password_input, password)\n                    allure.attach(browser.get_screenshot_as_png(), name=\"Fill in Password\")\n    \n                with allure.step(\"Klik Tombol Login\"):\n                    login_button = browser.find_element(By.XPATH, \"//body/div[@id='root']/div[1]/div[2]/div[1]/form[1]/div[5]/div[1]/div[1]/div[1]/button[1]\")\n                    login_button.click()\n                    time.sleep(2)\n    \n                    wait = WebDriverWait(browser, 20)\n                    try:\n                        wait.until(EC.invisibility_of_element_located((By.XPATH, \"//body/div[@id='root']/div[1]/div[2]/div[1]/form[1]/div[5]/div[1]/div[1]/div[1]/button[1]\")))\n                    except TimeoutException:\n                        allure.attach(browser.get_screenshot_as_png(), name=\"Login Button Not Disappeared\")\n                        raise TimeoutException(\"Login button did not disappear\")\n    \n                try:\n                    popup = browser.find_element(By.CLASS_NAME, \"modal.multi-step.custom-modal.use-of-information\")\n                    if popup.is_displayed():\n                        with allure.step(\"Klik Tombol popup Agree\"):\n                            allure.attach(browser.get_screenshot_as_png(), name=\"menu popup\")\n                            time.sleep(1)\n                            agree_button = popup.find_element(By.XPATH, \"//button[contains(text(),'Agree')]\")\n                            agree_button.click()\n                            time.sleep(3)\n                except NoSuchElementException:\n                    pass\n    \n            # with allure.step(\"Klik Tombol Popup Tanda Tangan Perjanjian \"):\n            #     allure.attach(browser.get_screenshot_as_png(), name=\"Dashboard popup agreement\")\n            #     button_sign_agreement = browser.find_element(By.XPATH, \"//button[contains(text(),'Sign the Agreement')]\")\n            #     button_sign_agreement.click()\n            #     time.sleep(3)\n    \n                # with allure.step(\"Klik Checkbox Perjanjian\"):\n                #     checkbox_1 = browser.find_element(By.XPATH, '//*[@id=\"checkboxId\"]')\n                #     checkbox_1.click()\n                #     assert checkbox_1.is_selected()\n                #     allure.attach(browser.get_screenshot_as_png(), name=\"Sign Agreement\")\n    \n    \n                # with allure.step(\"Klik Tombol Close Tanda Tangan Perjanjian\"):\n                #     wait = WebDriverWait(browser, 20)\n                #     try:\n                #         button_sign = wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"myModalSigning\"]/div/div/div/div[2]/div/div/div/button')))\n                #         button_sign.click()\n    \n    \n                #     except TimeoutException:\n                #         allure.attach(browser.get_screenshot_as_png(), name=\"Button Sign tidak dapat memberikan response\")\n                #         raise TimeoutException(\"Button Sign tidak dapat memberikan response\")\n    \n    \n                #     wait = WebDriverWait(browser, 23)\n                #     wait.until(EC.invisibility_of_element_located((By.XPATH, '//*[@id=\"myModalSigning\"]/div/div/div/div[2]/div/div/div/button')))\n                #     allure.attach(browser.get_screenshot_as_png(), name=\"Thanks You Page\")\n                #     time.sleep(1)\n    \n                #     click_close_agreement = browser.find_element(By.XPATH, '//*[@id=\"myModalSigned\"]/div/div/div/button')\n                #     click_close_agreement.click()\n    \n    \n    #click profile agreement\n            with allure.step(\"Lender - NEW Mekar Agreement\"):\n                button_profile = browser.find_element(By.XPATH, '//*[@id=\"headerWrapper\"]/nav/div/ul/li[2]/a')\n                button_profile.click()\n                allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot menu profile Agreement\")\n                time.sleep(1)\n    \n    #expect pass jika element tidak ditemukan\n    \n                menu_agreement = browser.find_element(By.XPATH, '//a[contains(@href, \"/individual-agreement/\") and contains(@class, \"dropdown-item\") and contains(.//span/@class, \"zmdi-file-text\")]')\n                menu_agreement.click()\n                time.sleep(3)\n                allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot Dashboard Agreement\")\n    \n                time.sleep(1)\n    #-\n    \n                with allure.step(\"Subscription Agreement\"):\n                    try:\n                        button_click_agreement = browser.find_element(By.XPATH, '//*[@id=\"funderAgree\"]/div/table/tbody/tr/td[1]/a')\n                        button_click_agreement.click()\n    \n            # Tunggu hingga tombol menghilang\n                        wait = WebDriverWait(browser, 20)\n                        wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"funderAgree\"]/div/table/tbody/tr/td[1]/a')))\n                        allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot Dashboard Subscription Agreement\")\n                        time.sleep(1)\n    \n            #switch tab 2\n                        browser.switch_to.window(browser.window_handles[1])\n                        time.sleep(2)\n    \n            #--Ambil value url dari browser tab 2\n                        current_url = browser.current_url\n                        print(current_url)\n    \n    \n            #--Request downlaod link agreement\n                        dl_agreement = current_url\n    \n                        response = requests.get(dl_agreement)\n                        if response.status_code == 200:\n                        # Melampirkan file PDF ke dalam laporan Allure\n                            with allure.step(f\"Download Document Agreement\"):\n                                allure.attach(response.content, name=\"Download Agreement pdf\", attachment_type=allure.attachment_type.PDF)\n                                print(\"File berhasil dilampirkan.\")\n                                allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot Document Agreement\")\n                                allure.attach(current_url, name=\"Path Url Agreement\")\n                        else:\n                            print(\"Gagal mengunduh file.\")\n                            allure.attach(\" tidak menemukan document agreement di [bucket-renovation-test] \", name=\"Download Agreement Error\")\n                            allure.attach(browser.get_screenshot_as_png(), name=\"Screenshoot Agreement Error\")\n                            allure.attach(current_url, name=\"Failed Url\")\n                        time.sleep(1)\n    \n                    except NoSuchElementException:\n                        with allure.step(\"Subscription Agreement\"):\n                            allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot Agreement Element Not Found\")\n                            allure.attach(\"Agreement element was not found.\", name=\"Agreement Element Not Found\")\n                        pass\n    \n    #close tab 2 browser dan beralih ke tab 1\n>                   browser.switch_to.window(browser.window_handles[1])\nE                   IndexError: list index out of range\n\nTestcase\\LTIS-89.py:204: IndexError","steps":[{"name":"Test Steps","time":{"start":1687600944169,"stop":1687600974195,"duration":30026},"status":"broken","statusMessage":"IndexError: list index out of range\n","statusTrace":"  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\LTIS-89.py\", line 1171, in test_login_user_lender_new_users_1\n    browser = sign_agreement(email, password)\n  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\LTIS-89.py\", line 795, in sign_agreement\n    raise e\n  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\LTIS-89.py\", line 204, in sign_agreement\n    browser.switch_to.window(browser.window_handles[1])\n","steps":[{"name":"Login User testing.akunfadhli01+nolan@gmail.com","time":{"start":1687600944169,"stop":1687600964838,"duration":20669},"status":"passed","steps":[{"name":"Mengisi Email","time":{"start":1687600948594,"stop":1687600950435,"duration":1841},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Mengisi Password","time":{"start":1687600950435,"stop":1687600950996,"duration":561},"status":"passed","steps":[],"attachments":[{"uid":"797cc031ed5dc9ea","name":"Fill in Password","source":"797cc031ed5dc9ea.attach","type":"image/png","size":127079}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":false},{"name":"Klik Tombol Login","time":{"start":1687600950996,"stop":1687600960578,"duration":9582},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Klik Tombol popup Agree","time":{"start":1687600960601,"stop":1687600964838,"duration":4237},"status":"passed","steps":[],"attachments":[{"uid":"cc7f9e7df1a51e75","name":"menu popup","source":"cc7f9e7df1a51e75.attach","type":"image/png","size":148641}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Lender - NEW Mekar Agreement","time":{"start":1687600964838,"stop":1687600973964,"duration":9126},"status":"broken","statusMessage":"IndexError: list index out of range\n","statusTrace":"  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\LTIS-89.py\", line 204, in sign_agreement\n    browser.switch_to.window(browser.window_handles[1])\n","steps":[{"name":"Subscription Agreement","time":{"start":1687600973822,"stop":1687600973964,"duration":142},"status":"broken","statusMessage":"IndexError: list index out of range\n","statusTrace":"  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\LTIS-89.py\", line 204, in sign_agreement\n    browser.switch_to.window(browser.window_handles[1])\n","steps":[{"name":"Subscription Agreement","time":{"start":1687600973836,"stop":1687600973961,"duration":125},"status":"passed","steps":[],"attachments":[{"uid":"6d6a92fc7218f749","name":"Screenshot Agreement Element Not Found","source":"6d6a92fc7218f749.attach","type":"image/png","size":113768},{"uid":"f46b1ef36930aae2","name":"Agreement Element Not Found","source":"f46b1ef36930aae2.attach","type":"text/plain","size":32}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":true}],"attachments":[{"uid":"d099422d2b18b54b","name":"Screenshot menu profile Agreement","source":"d099422d2b18b54b.attach","type":"image/png","size":93210},{"uid":"5760a84c068a66c3","name":"Screenshot Dashboard Agreement","source":"5760a84c068a66c3.attach","type":"image/png","size":113768}],"parameters":[],"stepsCount":2,"hasContent":true,"attachmentsCount":4,"shouldDisplayMessage":false}],"attachments":[{"uid":"e966fdc3becb2415","name":"Exception Screenshot","source":"e966fdc3becb2415.attach","type":"image/png","size":113768}],"parameters":[],"stepsCount":8,"hasContent":true,"attachmentsCount":7,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":9,"hasContent":true,"attachmentsCount":7,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Testcase"},{"name":"suite","value":"LTIS-89"},{"name":"host","value":"LAPTOP-1965Q82V"},{"name":"thread","value":"33196-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Testcase.LTIS-89"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"43edeb6bcee3dcf8.json","parameterValues":[]}