{"uid":"66969822af1734d2","name":"[TC-13] Login dengan user verified dan bank_account Notify to funder **INSTITUSIONAL**","fullName":"Testcase.Agreement-LS_FP#test_login_user_verified_with_bank_account_notify_institutional","historyId":"7945346464d50d5c5eb849547540cce1","time":{"start":1687032910089,"stop":1687032963599,"duration":53510},"description":"\n    Melakukan login dengan user yang sudah melengkapi data dan bank_account Notify to funder .\n    (expect: menampilkan popup agreement karena sudah verified dan credit scoring sudah terisi )\n\n    [expect : popup sign agreement tampil.]\n    \n    **Kondisi saat ini:**\n    [Menu Pengguna] -> [Menu User Profile] -> [Menu Bank Account].\n\n    Langkah-langkah ini meliputi ...\n","descriptionHtml":"<pre><code>Melakukan login dengan user yang sudah melengkapi data dan bank_account Notify to funder .\n(expect: menampilkan popup agreement karena sudah verified dan credit scoring sudah terisi )\n\n[expect : popup sign agreement tampil.]\n\n**Kondisi saat ini:**\n[Menu Pengguna] -&gt; [Menu User Profile] -&gt; [Menu Bank Account].\n\nLangkah-langkah ini meliputi ...\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"@allure.title(\"[TC-13] Login dengan user verified dan bank_account Notify to funder **INSTITUSIONAL**\")\n    @allure.description(\"\"\"\n        Melakukan login dengan user yang sudah melengkapi data dan bank_account Notify to funder .\n        (expect: menampilkan popup agreement karena sudah verified dan credit scoring sudah terisi )\n    \n        [expect : popup sign agreement tampil.]\n    \n        **Kondisi saat ini:**\n        [Menu Pengguna] -> [Menu User Profile] -> [Menu Bank Account].\n    \n        Langkah-langkah ini meliputi ...\n    \"\"\")\n    @allure.label('positif')\n    def test_login_user_verified_with_bank_account_notify_institutional():\n        email = \"landriani+testing@mekar.id\"\n        password = \"Testing1\"\n    \n        with allure.step(f\"Testing dengan email: {email}\"):\n>           browser = sign_agreement(email, password)\n\nTestcase\\Agreement-LS_FP.py:895: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTestcase\\Agreement-LS_FP.py:192: in sign_agreement\n    raise e\nTestcase\\Agreement-LS_FP.py:154: in sign_agreement\n    wait.until(EC.invisibility_of_element_located((By.XPATH, '//*[@id=\"myModalSigning\"]/div/div/div/div[2]/div/div/div/button')))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3b5050a2a558ea0b50d0ab3a1da93088\")>, method = <function invisibility_of_element_located.<locals>._predicate at 0x0000028242930310>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1687032439385,"stop":1687032439482,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"description":"\n    Melakukan login dengan user yang sudah melengkapi data dan bank_account Notify to funder .\n    (expect: menampilkan popup agreement karena sudah verified dan credit scoring sudah terisi )\n\n    [expect : popup sign agreement tampil.]\n    \n    **Kondisi saat ini:**\n    [Menu Pengguna] -> [Menu User Profile] -> [Menu Bank Account].\n\n    Langkah-langkah ini meliputi ...\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"@allure.title(\"[TC-13] Login dengan user verified dan bank_account Notify to funder **INSTITUSIONAL**\")\n    @allure.description(\"\"\"\n        Melakukan login dengan user yang sudah melengkapi data dan bank_account Notify to funder .\n        (expect: menampilkan popup agreement karena sudah verified dan credit scoring sudah terisi )\n    \n        [expect : popup sign agreement tampil.]\n    \n        **Kondisi saat ini:**\n        [Menu Pengguna] -> [Menu User Profile] -> [Menu Bank Account].\n    \n        Langkah-langkah ini meliputi ...\n    \"\"\")\n    @allure.label('positif')\n    def test_login_user_verified_with_bank_account_notify_institutional():\n        email = \"landriani+testing@mekar.id\"\n        password = \"Testing1\"\n    \n        with allure.step(f\"Testing dengan email: {email}\"):\n>           browser = sign_agreement(email, password)\n\nTestcase\\Agreement-LS_FP.py:895: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTestcase\\Agreement-LS_FP.py:192: in sign_agreement\n    raise e\nTestcase\\Agreement-LS_FP.py:154: in sign_agreement\n    wait.until(EC.invisibility_of_element_located((By.XPATH, '//*[@id=\"myModalSigning\"]/div/div/div/div[2]/div/div/div/button')))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3b5050a2a558ea0b50d0ab3a1da93088\")>, method = <function invisibility_of_element_located.<locals>._predicate at 0x0000028242930310>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException","steps":[{"name":"Testing dengan email: landriani+testing@mekar.id","time":{"start":1687032910089,"stop":1687032963598,"duration":53509},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\Agreement-LS_FP.py\", line 895, in test_login_user_verified_with_bank_account_notify_institutional\n    browser = sign_agreement(email, password)\n  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\Agreement-LS_FP.py\", line 192, in sign_agreement\n    raise e\n  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\Agreement-LS_FP.py\", line 154, in sign_agreement\n    wait.until(EC.invisibility_of_element_located((By.XPATH, '//*[@id=\"myModalSigning\"]/div/div/div/div[2]/div/div/div/button')))\n  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\myenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"Login dengan email: landriani+testing@mekar.id","time":{"start":1687032910089,"stop":1687032917165,"duration":7076},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"Mengisi Email","time":{"start":1687032917165,"stop":1687032918969,"duration":1804},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"Mengisi Password","time":{"start":1687032918969,"stop":1687032919553,"duration":584},"status":"passed","steps":[],"attachments":[{"uid":"4f46fb6e4afe9194","name":"Fill in Password","source":"4f46fb6e4afe9194.attach","type":"image/png","size":125675}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"Klik Tombol Login","time":{"start":1687032919553,"stop":1687032935760,"duration":16207},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"Klik Tombol Popup Tanda Tangan Perjanjian ","time":{"start":1687032935773,"stop":1687032938963,"duration":3190},"status":"passed","steps":[],"attachments":[{"uid":"2898fe90dee7eb7d","name":"Dashboard popup agreement","source":"2898fe90dee7eb7d.attach","type":"image/png","size":99208}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"Klik Checkbox Perjanjian","time":{"start":1687032938963,"stop":1687032939271,"duration":308},"status":"passed","steps":[],"attachments":[{"uid":"c2d084ce02d14f28","name":"Sign Agreement","source":"c2d084ce02d14f28.attach","type":"image/png","size":183732}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"Klik Tombol Setuju Tanda Tangan Perjanjian","time":{"start":1687032939271,"stop":1687032963313,"duration":24042},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\Testcase\\Agreement-LS_FP.py\", line 154, in sign_agreement\n    wait.until(EC.invisibility_of_element_located((By.XPATH, '//*[@id=\"myModalSigning\"]/div/div/div/div[2]/div/div/div/button')))\n  File \"C:\\Users\\irsan\\PycharmProjects\\Selenium Python\\myenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"Kirim Permintaan API","time":{"start":1687032939852,"stop":1687032939870,"duration":18},"status":"passed","steps":[],"attachments":[{"uid":"583b38186004a0ca","name":"Method","source":"583b38186004a0ca.attach","type":"text/plain","size":3},{"uid":"e8c6a6d9951e1632","name":"URL","source":"e8c6a6d9951e1632.attach","type":"text/plain","size":61},{"uid":"33a44a505eac7e15","name":"Headers","source":"33a44a505eac7e15.attach","type":"text/plain","size":121},{"uid":"92759d4799afd544","name":"Body","source":"92759d4799afd544.attach","type":"text/plain","size":4},{"uid":"8877855c6b656f51","name":"Status Code","source":"8877855c6b656f51.attach","type":"text/plain","size":3},{"uid":"b4db4fee0bc59054","name":"Headers","source":"b4db4fee0bc59054.attach","type":"text/plain","size":656},{"uid":"e33d0ff23c973b96","name":"Response Body","source":"e33d0ff23c973b96.attach","type":"application/xhtml+xml","size":15715}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":7,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":7,"stepsCount":1,"hasContent":true}],"attachments":[{"uid":"f197c2fa6f302347","name":"Exception Screenshot","source":"f197c2fa6f302347.attach","type":"image/png","size":184192}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":11,"stepsCount":8,"hasContent":true}],"attachments":[{"uid":"5545b5798295e847","name":"stdout","source":"5545b5798295e847.txt","type":"text/plain","size":67}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":12,"stepsCount":9,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Testcase"},{"name":"suite","value":"Agreement-LS_FP"},{"name":"host","value":"LAPTOP-1965Q82V"},{"name":"thread","value":"23416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Testcase.Agreement-LS_FP"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"66969822af1734d2.json","parameterValues":[]}